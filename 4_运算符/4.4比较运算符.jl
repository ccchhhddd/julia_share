a = Int64(50)
b = Int32(2)
c = Float32(2.5)
d = Float64(3.0)
x = 3+2im
y = 15//8
#1.大小比较
a > b
a < b
c >= d
c <= d
c < y
#值得注意的是，大小的比较对两个复数是不适用的

#2.相等比较
a == b
#是否相等的比较会忽略值的具体类型，对数值本身进行比较
UInt8(5) == Int64(5)
3 +im == 3 +1im

#判断是否相等的同时需要考虑值的类型，可用 === 这个“完全相同”运算符
UInt8(5) === Int64(5)
#不全相同
3 +im !== 1

#3.特数值比较
Inf32 == Inf
Inf > Inf
Inf < Inf
#对于NaN这个特殊的浮点值，比较结果却相当特别
NaN == NaN
NaN === NaN
NaN != NaN
NaN > NaN

#isequal()函数可以用来判断两个数值是否相等,等价于==这个运算符，仅在值为NaN,或零时会有所不同
isequal(NaN,NaN) #true
NaN == NaN #false
isequal(0.0,-0.0) #true
0.0 == -0.0 #true

#4.其他比较操作
#“约等于”和“不约等于”是Julia有特色的部分。两者的用途相反，用于判断两个操作数是否在默认的阈值下满足大约相等的关系
0.1 ≈ 0.1-1e-10
0.1 ≉ 0.1-1e-10

0.1 >= 0.1-1e-10
0.1 <= 0.1-1e-10